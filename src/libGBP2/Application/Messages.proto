syntax = "proto3";
package libgbp2_api;

/**
@brief A physical quantity with a numerical value and unit.
*/
message Quantity {
  double value = 1;  // numerical value
  string unit = 2;   // unit string
}

enum BeamWidthType {
  BEAM_WIDTH_TYPE_UNSPECIFIED = 0;
  BEAM_WIDTH_TYPE_ONE_OVER_E_DIAMETER = 1;
  BEAM_WIDTH_TYPE_ONE_OVER_E_SQUARED_DIAMETER = 2;
  BEAM_WIDTH_TYPE_FWHM_DIAMETER = 3;
  BEAM_WIDTH_TYPE_ONE_OVER_E_RADIUS = 4;
  BEAM_WIDTH_TYPE_ONE_OVER_E_SQUARED_RADIUS = 5;
  BEAM_WIDTH_TYPE_FWHM_RADIUS = 6;
}

enum BeamDivergenceType {
  BEAM_DIVERGENCE_TYPE_UNSPECIFIED = 0;
  BEAM_DIVERGENCE_TYPE_ONE_OVER_E_FULL_ANGLE = 1;
  BEAM_DIVERGENCE_TYPE_ONE_OVER_E_SQUARED_FULL_ANGLE = 2;
  BEAM_DIVERGENCE_TYPE_FWHM_FULL_ANGLE = 3;
  BEAM_DIVERGENCE_TYPE_ONE_OVER_E_HALF_ANGLE = 4;
  BEAM_DIVERGENCE_TYPE_ONE_OVER_E_SQUARED_HALF_ANGLE = 5;
  BEAM_DIVERGENCE_TYPE_FWHM_HALF_ANGLE = 6;
}

message CircularGaussianBeam {
  Quantity beam_waist_width = 1;
  BeamWidthType beam_waist_width_type = 2;
  Quantity beam_waist_position = 3;
  optional Quantity beam_quality_factor = 4;
  optional beam_divergence = 5;
}
